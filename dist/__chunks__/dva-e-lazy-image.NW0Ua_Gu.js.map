{"version":3,"file":"dva-e-lazy-image.NW0Ua_Gu.js","sources":["../../src/services/LazyConnectService.ts","../../src/components/dva-e-lazy-image/dva-e-lazy-image.ts"],"sourcesContent":["class LazyConnectService {\n  componentMap = new WeakMap();\n  intersectionObserver: IntersectionObserver;\n\n  constructor() {\n    this.intersectionObserver = new IntersectionObserver(entries => this.handleIntersectionChange(entries));\n  }\n\n  subscribe(target: HTMLElement, intersectionCallback: () => void) {\n    this.componentMap.set(target, intersectionCallback);\n    this.intersectionObserver.observe(target);\n  }\n\n  unsubscribe(target: HTMLElement) {\n    this.intersectionObserver.unobserve(target);\n    this.componentMap.delete(target);\n  }\n\n  handleIntersectionChange(entries: Array<IntersectionObserverEntry>) {\n    // console.log(\"lol\", entries);\n    entries.forEach(intersectionEntry => {\n      const target = intersectionEntry.target;\n\n      if (!intersectionEntry.isIntersecting || !this.componentMap.has(target)) return;\n\n      const intersectionCallback = this.componentMap.get(target);\n      this.unsubscribe(target as HTMLElement);\n      intersectionCallback();\n    });\n  }\n}\n\nexport default new LazyConnectService();\n","import { Component, MQBasedRendered } from \"@kluntje/core\";\nimport { LOADING, LOADED, INITIALIZED, IN_VIEWPORT, HIDDEN } from \"Constants/cssClasses\";\nimport { removeClass, addClass, onEvent, removeEvent } from \"@kluntje/js-utils/lib/dom-helpers\";\nimport { render } from \"lit-html\";\nimport mqDefinitions from \"Config/mediaQueries\";\nimport LazyConnectService from \"Services/LazyConnectService\";\n\nimport { template } from \"./dva-e-lazy-image.template\";\n\nexport type ImageInitType = \"lazy\" | \"explicit\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n@MQBasedRendered(mqDefinitions)\nexport class DvaLazyImage extends Component {\n  constructor() {\n    super({\n      ui: {\n        image: \".dva-js-lazy-image__img :-one\",\n        wrapper: \".dva-js-lazy-image__wrapper :-one\",\n      },\n      initialStates: {\n        imgLoaded: false,\n      },\n      useShadowDOM: true,\n    });\n  }\n\n  connectedCallback() {\n    if (this.initType === \"lazy\") {\n      LazyConnectService.subscribe(this, () => super.connectedCallback());\n    } else {\n      super.connectedCallback();\n    }\n  }\n\n  get DEFAULT_FALLBACK_IMAGE(): string {\n    return \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 9'%3E%3C/svg%3E\";\n  }\n\n  get fallbackImg(): string {\n    return this.getAttribute(\"fallback-image\") || this.DEFAULT_FALLBACK_IMAGE;\n  }\n\n  /**\n   * Returns value of 'src'-Attribute\n   * @returns {string}\n   */\n  get imgSrc(): string {\n    return this.getAttribute(\"src\") || \"\";\n  }\n\n  /**\n   * Returns value of 'srcset'-Attribute\n   * @returns {string}\n   */\n  get imgSrcSet(): string {\n    return this.getAttribute(\"srcset\") || \"\";\n  }\n\n  /**\n   * Returns value of 'sizes'-Attribute\n   * @returns {string}\n   */\n  get imgSizes(): string {\n    return this.getAttribute(\"sizes\") || \"\";\n  }\n\n  /**\n   * Returns value of 'alt'-Attribute\n   * @returns {string}\n   */\n  get imgAlt(): string {\n    return this.getAttribute(\"alt\") || \"\";\n  }\n\n  /**\n   * Returns value of 'aspect-ratio'-Attribute\n   * @returns {string}\n   */\n  get imgAspectRatio(): string {\n    return this.getAttribute(\"aspect-ratio\") || \"\";\n  }\n\n  /**\n   * Returns value of 'wrapper'-Attribute\n   * @returns {string}\n   */\n  get imgWrapper(): string {\n    return this.getAttribute(\"wrapper\") || \"\";\n  }\n\n  /**\n   * Returns, whether loaded image is Wider than needed\n   * @returns {boolean}\n   */\n  get hasOverWidth(): boolean {\n    return this.ui.image.offsetHeight < this.offsetHeight;\n  }\n\n  /**\n   * Webcomponents Helper to observe Attribute Changes\n   * @override\n   * @returns {string[]}\n   */\n  static get observedAttributes(): string[] {\n    return [\"src\", \"aspect-ratio\"];\n  }\n\n  /**\n   * Returns given init-type, default to lazy\n   * @returns {ImageInitType}\n   */\n  get initType(): ImageInitType {\n    switch (this.getAttribute(\"init\")) {\n      case \"explicit\":\n        return \"explicit\";\n      default:\n        return \"lazy\";\n    }\n  }\n\n  /**\n   * Handles change of observed Attributes\n   * @override\n   * @param {string} name - name of Attribute, that changed\n   * @param {string} oldValue\n   * @param {string} newValue\n   */\n  attributeChangedCallback(name: string, oldValue: string, newValue: string): void {\n    if (oldValue === newValue || !this.state.initialized) return;\n\n    switch (name) {\n      case \"src\":\n        this.setState({ imgLoaded: false });\n        this.loadImage();\n        break;\n      case \"aspect-ratio\":\n        this.renderComponent();\n        this.handleOverwidth();\n        break;\n    }\n  }\n\n  /**\n   * Renders Component via lit-html\n   */\n  renderComponent(): void {\n    render(\n      template({\n        alt: this.imgAlt,\n        src: this.DEFAULT_FALLBACK_IMAGE,\n        srcset: \"\",\n        sizes: this.imgSizes,\n        aspectRatio: this.imgAspectRatio,\n        wrapper: this.imgWrapper,\n        fallbackImg: this.fallbackImg,\n      }),\n      this.getUiRoot(),\n    );\n  }\n\n  /**\n   * Rerenders Component via lit-html\n   */\n  updateComponent(): void {\n    render(\n      template({\n        alt: this.imgAlt,\n        src: this.imgSrc,\n        srcset: this.imgSrcSet,\n        sizes: this.imgSizes,\n        aspectRatio: this.imgAspectRatio,\n        fallbackImg: this.fallbackImg,\n      }),\n      this.getUiRoot(),\n    );\n  }\n\n  /**\n   * Lifecycle-Hook: Initializes Component after render\n   * @override\n   */\n  afterComponentRender(): void {\n    addClass(this, INITIALIZED);\n    removeClass(this.ui.wrapper, HIDDEN);\n    if (this.initType !== \"explicit\") this.loadImage();\n  }\n\n  /**\n   * Lifecycle-Hook for removing markup on destroy\n   */\n  beforeComponentDisconnects(): void {\n    addClass(this.ui.wrapper, HIDDEN);\n  }\n\n  /**\n   * Lifecycle-Hook for removing markup on destroy\n   */\n  destroyComponent(): void {\n    this.setState({ imgLoaded: false });\n  }\n\n  /**\n   * Initiates Image Load, by add src(-set) to img in shadow-DOM\n   */\n  loadImage(): void {\n    if (this.state.imgLoaded) return;\n    addClass(this, IN_VIEWPORT);\n    addClass(this.ui.wrapper, LOADING);\n    const currentImage = this.ui.image;\n    this.attachImageEvents(currentImage); // attach loading events\n    // trigger image loading\n    if (this.imgSrc || this.imgSrcSet) {\n      if (this.imgSrc) currentImage.setAttribute(\"src\", this.imgSrc);\n      if (this.imgSrcSet) currentImage.setAttribute(\"srcset\", this.imgSrcSet);\n    } else {\n      console.warn(\"LazyImage: no src/srcset provided for\", currentImage);\n    }\n  }\n\n  /**\n   * Handles any ImageLoading-Errors\n   */\n  handleImageLoadingError(): void {\n    const currentImg = this.ui.image;\n\n    removeEvent(currentImg, \"error\", this.handleImageLoadingError, this);\n    console.log(\"src\", this.fallbackImg);\n    currentImg.setAttribute(\"src\", this.fallbackImg);\n    currentImg.setAttribute(\"srcset\", \"\");\n    console.log(\"lazyImg error:\", currentImg);\n  }\n\n  /**\n   * Handles ImageLoad-Event, by setting/removing needed Classes\n   */\n  handleImageLoad(): void {\n    this.handleOverwidth();\n\n    removeEvent(this.ui.image, \"load\", this.handleImageLoad, this);\n    removeClass(this.ui.wrapper, LOADING);\n    addClass(this, LOADED);\n\n    this.dispatchEvent(\n      new CustomEvent(\"dva-image-loaded\", {\n        detail: {\n          target: this,\n        },\n      }),\n    );\n    this.setState({ imgLoaded: true });\n  }\n\n  /**\n   * Adds needed Events for ImageLoading\n   * @param {Node} img - image in Shadow-DOM\n   */\n  attachImageEvents(img: HTMLImageElement): void {\n    onEvent(img, \"load\", this.handleImageLoad, this);\n    onEvent(img, \"error\", this.handleImageLoadingError, this);\n  }\n\n  /**\n   * Checks if image has Overwidth and optinally adds needed class\n   */\n  handleOverwidth(): void {\n    removeClass(this.ui.wrapper, \"dva-e-lazy-image__wrapper--has-overwidth\");\n    if (this.hasOverWidth) {\n      addClass(this.ui.wrapper, \"dva-e-lazy-image__wrapper--has-overwidth\");\n    }\n  }\n}\n\ncustomElements.define(\"dva-e-lazy-image\", DvaLazyImage);\n"],"names":["LazyConnectService","entries","target","intersectionCallback","intersectionEntry","LazyConnectService$1","DvaLazyImage","Component","name","oldValue","newValue","render","template","addClass","INITIALIZED","removeClass","HIDDEN","IN_VIEWPORT","LOADING","currentImage","currentImg","removeEvent","LOADED","img","onEvent","__decorateClass","MQBasedRendered","mqDefinitions"],"mappings":"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"}