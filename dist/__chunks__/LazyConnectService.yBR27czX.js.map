{"version":3,"file":"LazyConnectService.yBR27czX.js","sources":["../../src/services/LazyConnectService.ts"],"sourcesContent":["class LazyConnectService {\n  componentMap = new WeakMap();\n  intersectionObserver: IntersectionObserver;\n\n  constructor() {\n    this.intersectionObserver = new IntersectionObserver(entries => this.handleIntersectionChange(entries));\n  }\n\n  subscribe(target: HTMLElement, intersectionCallback: () => void) {\n    this.componentMap.set(target, intersectionCallback);\n    this.intersectionObserver.observe(target);\n  }\n\n  unsubscribe(target: HTMLElement) {\n    this.intersectionObserver.unobserve(target);\n    this.componentMap.delete(target);\n  }\n\n  handleIntersectionChange(entries: Array<IntersectionObserverEntry>) {\n    // console.log(\"lol\", entries);\n    entries.forEach(intersectionEntry => {\n      const target = intersectionEntry.target;\n\n      if (!intersectionEntry.isIntersecting || !this.componentMap.has(target)) return;\n\n      const intersectionCallback = this.componentMap.get(target);\n      this.unsubscribe(target as HTMLElement);\n      intersectionCallback();\n    });\n  }\n}\n\nexport default new LazyConnectService();\n"],"names":["LazyConnectService","entries","target","intersectionCallback","intersectionEntry","LazyConnectService$1"],"mappings":"AAAA,MAAMA,CAAmB,CAIvB,aAAc,CAHd,KAAA,iBAAmB,QAIjB,KAAK,qBAAuB,IAAI,wBAAgC,KAAK,yBAAyBC,CAAO,CAAC,CACxG,CAEA,UAAUC,EAAqBC,EAAkC,CAC1D,KAAA,aAAa,IAAID,EAAQC,CAAoB,EAC7C,KAAA,qBAAqB,QAAQD,CAAM,CAC1C,CAEA,YAAYA,EAAqB,CAC1B,KAAA,qBAAqB,UAAUA,CAAM,EACrC,KAAA,aAAa,OAAOA,CAAM,CACjC,CAEA,yBAAyBD,EAA2C,CAElEA,EAAQ,QAA6BG,GAAA,CACnC,MAAMF,EAASE,EAAkB,OAEjC,GAAI,CAACA,EAAkB,gBAAkB,CAAC,KAAK,aAAa,IAAIF,CAAM,EAAG,OAEzE,MAAMC,EAAuB,KAAK,aAAa,IAAID,CAAM,EACzD,KAAK,YAAYA,CAAqB,EACjBC,GAAA,CACtB,CACH,CACF,CAEA,MAAeE,EAAA,IAAIL"}