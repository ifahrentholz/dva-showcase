{"version":3,"mappings":"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","names":["scrollPosition","enableScrollLock","addClass","SCROLL_LOCK","disableScrollLock","removeClass","DebuggerService","message","args","DebuggerService$1","_FocusService","newValue","onEvent","removeEvent","target","tabableElements","_a","trapElement","activeElement","error","_b","findAll","firstTabableElement","lastTabableElement","FocusService","FocusService$1","LightboxService","lightboxImageUrl","renderDvagBasicOverlayAsLightbox","lightboxWrapper","render","overlay","find","waitForInitialization","renderBasicOverlayAsLightbox","__vitePreload","LightboxService$1","DvagBasicOverlay","Component","ANIMATING","waitFor","ACTIVE","OVERLAY_CLOSE_EVENT","OVERLAY_OPEN_EVENT","_e","__decorateClass","uiElement","uiEvent"],"sources":["../../src/helpers/domHelper/scrollLock.ts","../../src/services/DebuggerService.ts","../../src/services/FocusService.ts","../../src/services/LightboxService.ts","../../src/components/dvag-m-basic-overlay/dvag-m-basic-overlay.ts"],"sourcesContent":["import { SCROLL_LOCK } from \"Constants/cssClasses\";\nimport { addClass, removeClass } from \"@kluntje/js-utils/lib/dom-helpers\";\n\nlet scrollPosition = 0;\nlet scrollLockEnabled = false;\n\nexport const enableScrollLock = () => {\n  scrollPosition = window.pageYOffset;\n  addClass(document.body, SCROLL_LOCK);\n  document.body.style.top = `-${scrollPosition}px`;\n  scrollLockEnabled = true;\n};\n\nexport const disableScrollLock = () => {\n  removeClass(document.body, SCROLL_LOCK);\n  document.body.style.top = \"\";\n  window.scrollTo(0, scrollPosition);\n  scrollLockEnabled = false;\n};\n\nexport const toggleScrollLock = (enable?: boolean) => {\n  if (enable === true || (enable !== false && !scrollLockEnabled)) {\n    enableScrollLock();\n  } else {\n    disableScrollLock();\n  }\n};\n","class DebuggerService {\n  debugModeActive = false;\n\n  log(message?: any, ...args: any[]) {\n    if (this.debugModeActive === false) return;\n    console.log(message, ...args);\n  }\n\n  warn(message?: any, ...args: any[]) {\n    if (this.debugModeActive === false) return;\n    console.warn(message, ...args);\n  }\n\n  error(message?: any, ...args: any[]) {\n    if (this.debugModeActive === false) return;\n    console.error(message, ...args);\n  }\n}\n\nexport default new DebuggerService();\n","import { findAll, onEvent, removeEvent } from \"@kluntje/js-utils/lib/dom-helpers\";\n\nimport DebuggerService from \"./DebuggerService\";\n\nexport interface TrapTargetOptions {\n  activeElementBeforeTrapped: Element | null;\n  tabableElements: Array<HTMLElement>;\n}\n\nclass FocusService {\n  static TABABLE_ELEMENTS_SELECTOR = 'button, a[href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n  private _focusTrapped = false;\n\n  private tabableElementsMap: WeakMap<HTMLElement, TrapTargetOptions> = new WeakMap();\n\n  private trapTargetList: Array<HTMLElement> = [];\n\n  eventBindingMap = {};\n  eventIdMap = new WeakMap();\n\n  get focusTrapped() {\n    return this._focusTrapped;\n  }\n\n  set focusTrapped(newValue) {\n    if (this._focusTrapped === newValue) return;\n\n    if (newValue === true) {\n      onEvent(document.body, [\"keydown\"], this.handleKeyDown, this);\n    } else {\n      removeEvent(document.body, [\"keydown\"], this.handleKeyDown, this);\n    }\n    this._focusTrapped = newValue;\n  }\n\n  get currentTrapTarget(): HTMLElement | null {\n    if (this.trapTargetList.length === 0) return null;\n\n    return this.trapTargetList[this.trapTargetList.length - 1];\n  }\n\n  get firstTabableElement() {\n    if (this.currentTrapTarget === null) return null;\n    return this.getFirstTabableElementOf(this.currentTrapTarget);\n  }\n\n  get lastTabableElement() {\n    if (this.currentTrapTarget === null) return null;\n    return this.getLastTabableElementOf(this.currentTrapTarget);\n  }\n\n  get firstTabableElementActive() {\n    if (this.currentTrapTarget === null) return false;\n    return this.isFirstTabableElementActive(this.currentTrapTarget);\n  }\n\n  get lastTabableElementActive() {\n    if (this.currentTrapTarget === null) return false;\n    return this.isLastTabableElementActive(this.currentTrapTarget);\n  }\n\n  trapFocusIn(target: HTMLElement) {\n    const tabableElements = this.tabableElementsIn(target);\n\n    if (tabableElements.length === 0) return;\n\n    this.trapTargetList.push(target);\n    this.tabableElementsMap.set(target, {\n      activeElementBeforeTrapped: document.activeElement,\n      tabableElements,\n    });\n    this.focusTrapped = true;\n    // eslint-disable-next-line no-unused-expressions\n    this.firstTabableElement?.focus();\n  }\n\n  unTrapFocusIn(target: HTMLElement) {\n    this.trapTargetList = this.trapTargetList.filter(trapElement => trapElement !== target);\n    const activeElement = this.tabableElementsMap.get(target)?.activeElementBeforeTrapped || null;\n    try {\n      if (activeElement !== null) (activeElement as HTMLElement).focus();\n    } catch (error) {\n      DebuggerService.error(\"FocusService: \", error);\n    }\n    this.tabableElementsMap.delete(target);\n\n    if (this.trapTargetList.length === 0) this.focusTrapped = false;\n  }\n\n  private handleKeyDown(e: KeyboardEvent): void {\n    if (e.key !== \"Tab\") return;\n\n    if (e.shiftKey && this.firstTabableElementActive) {\n      // eslint-disable-next-line no-unused-expressions\n      this.lastTabableElement?.focus();\n      e.preventDefault();\n    } else if (e.shiftKey === false && this.lastTabableElementActive) {\n      // eslint-disable-next-line no-unused-expressions\n      this.firstTabableElement?.focus();\n      e.preventDefault();\n    }\n  }\n\n  private tabableElementsIn(target: HTMLElement) {\n    return findAll(target, FocusService.TABABLE_ELEMENTS_SELECTOR);\n  }\n\n  private getFirstTabableElementOf(target: HTMLElement) {\n    const tabableElements = this.tabableElementsMap.get(target)?.tabableElements || [];\n    if (tabableElements.length === 0) return null;\n    return tabableElements[0];\n  }\n\n  private getLastTabableElementOf(target: HTMLElement) {\n    const tabableElements = this.tabableElementsMap.get(target)?.tabableElements || [];\n    if (tabableElements.length === 0) return null;\n    return tabableElements[tabableElements.length - 1];\n  }\n\n  private isFirstTabableElementActive(target: HTMLElement) {\n    const firstTabableElement = this.getFirstTabableElementOf(target);\n    if (firstTabableElement === null) return false;\n    return firstTabableElement === document.activeElement;\n  }\n\n  private isLastTabableElementActive(target: HTMLElement) {\n    const lastTabableElement = this.getLastTabableElementOf(target);\n    if (lastTabableElement === null) return false;\n    return lastTabableElement === document.activeElement;\n  }\n}\n\nexport default new FocusService();\n","import { find } from \"@kluntje/js-utils/lib/dom-helpers\";\nimport { DvagBasicOverlay } from \"Components/dvag-m-basic-overlay/dvag-m-basic-overlay\";\nimport { render } from \"lit-html\";\nimport { dvagBasicOverlayAsLightboxTemplateArgs } from \"Components/dvag-m-basic-overlay/dvag-m-basic-overlay.template\";\nimport { waitForInitialization } from \"Helpers/componentHelper/waitForInitialization\";\n\n/**\n * Global helper service to assist with lightboxes for single images\n */\nclass LightboxService {\n  private lightboxInstance: DvagBasicOverlay | null = null;\n\n  public createLightbox(lightboxImageUrl: string) {\n    this.renderLightbox({\n      imageUrl: lightboxImageUrl,\n      cssClasses: \"dvag-m-basic-overlay--lightbox\",\n    });\n  }\n\n  public destroyLightbox() {\n    if (this.lightboxInstance === null) return;\n    this.lightboxInstance.close();\n    document.body.removeChild(this.lightboxInstance);\n    this.lightboxInstance = null;\n  }\n\n  private async renderLightbox(args: dvagBasicOverlayAsLightboxTemplateArgs) {\n    const renderDvagBasicOverlayAsLightbox = await this.loadOverlayTemplate();\n    const lightboxWrapper = document.createElement(\"div\");\n    render(renderDvagBasicOverlayAsLightbox(args), lightboxWrapper);\n\n    const overlay = find<DvagBasicOverlay>(lightboxWrapper, \".dvag-m-basic-overlay\");\n    if (overlay === null) return;\n    document.body.appendChild(overlay);\n    this.lightboxInstance = overlay;\n    await waitForInitialization(overlay);\n    overlay.open();\n  }\n\n  private async loadOverlayTemplate() {\n    const { renderBasicOverlayAsLightbox } = await import(\n      \"Components/dvag-m-basic-overlay/dvag-m-basic-overlay.template\"\n    );\n    return renderBasicOverlayAsLightbox;\n  }\n}\n\nexport default new LightboxService();\n","import { Component, uiElement, uiEvent } from \"@kluntje/core\";\nimport { addClass, onEvent, removeClass, removeEvent, waitFor } from \"@kluntje/js-utils/lib/dom-helpers\";\nimport { ACTIVE, ANIMATING } from \"Constants/cssClasses\";\nimport { OVERLAY_CLOSE_EVENT, OVERLAY_OPEN_EVENT } from \"Constants/eventTypes\";\nimport { disableScrollLock, enableScrollLock } from \"Helpers/domHelper/scrollLock\";\nimport FocusService from \"Services/FocusService\";\nimport LightboxService from \"Services/LightboxService\";\n\nexport class DvagBasicOverlay extends Component {\n  @uiElement(\".dvag-m-basic-overlay__close\")\n  closeBtn: HTMLButtonElement;\n\n  public async close() {\n    disableScrollLock();\n\n    removeClass(this, ANIMATING);\n    await waitFor(300);\n    removeClass(this, ACTIVE);\n    removeEvent(window, \"keyup\", this.handleKeyboardsEvents, this);\n    FocusService.unTrapFocusIn(this);\n    LightboxService.destroyLightbox();\n    this.dispatchEvent(new CustomEvent(OVERLAY_CLOSE_EVENT));\n  }\n\n  public async open() {\n    enableScrollLock();\n\n    addClass(this, ACTIVE);\n    await waitFor(100);\n    addClass(this, ANIMATING);\n    onEvent(window, \"keyup\", this.handleKeyboardsEvents, this);\n    FocusService.trapFocusIn(this);\n    this.dispatchEvent(new CustomEvent(OVERLAY_OPEN_EVENT));\n  }\n\n  handleKeyboardsEvents(e: KeyboardEvent) {\n    if (e.key !== \"Escape\") return;\n    this.close();\n  }\n\n  handleCookieChange() {\n    // to fix inheritance bug with kluntje decorators\n    // @TODO: Remove later\n  }\n\n  // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n  handleOverlayClick(_e: Event) {\n    // to fix inheritance bug with kluntje decorators\n    // @TODO: Remove later\n  }\n\n  @uiEvent(\"closeBtn\", \"click\")\n  handleCloseBtnClick() {\n    this.close();\n  }\n}\n\ncustomElements.define(\"dvag-m-basic-overlay\", DvagBasicOverlay);\n"],"file":"__chunks__/dvag-m-basic-overlay.dnVNW-sC.js"}