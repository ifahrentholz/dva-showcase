{"version":3,"file":"addClasses.XfqLBZPy.js","sources":["../../src/utils/toClassName.ts","../../src/utils/addClasses.ts"],"sourcesContent":["/**\n * Converts a string into a valid CSS class name.\n *\n * @param {string} name - The string to convert into a CSS class name.\n * @returns {string} The converted CSS class name.\n *\n * @example\n * // Example usage:\n * const inputString = 'Hello, World!';\n * const cssClassName = toClassName(inputString);\n * console.log(cssClassName); // Output: 'hello-world'\n */\nexport function toClassName(name: string): string {\n  return name\n    .toLowerCase()\n    .replace(/[^0-9a-z]/gi, \"-\")\n    .replace(/-+/g, \"-\")\n    .replace(/^-|-$/g, \"\");\n}\n","import { toClassName } from \"./toClassName\";\n\n/**\n * Adds CSS classes to an HTML element.\n *\n * @param {HTMLElement} element - The HTML element to which classes will be added.\n * @param {string} classes - A string containing CSS classes separated by commas.\n *\n * @example\n * const element = document.getElementById('myElement');\n * const classesToAdd = 'class1, class2, class3';\n * addClasses(element, classesToAdd);\n */\nexport const addClasses = (element: HTMLElement, classes: string): void => {\n  classes.split(\",\").forEach((cssClass: string): void => {\n    element.classList.add(toClassName(cssClass.trim()));\n  });\n};\n"],"names":["toClassName","name","addClasses","element","classes","cssClass"],"mappings":"AAYO,SAASA,EAAYC,EAAsB,CAChD,OAAOA,EACJ,YAAA,EACA,QAAQ,cAAe,GAAG,EAC1B,QAAQ,MAAO,GAAG,EAClB,QAAQ,SAAU,EAAE,CACzB,CCLa,MAAAC,EAAa,CAACC,EAAsBC,IAA0B,CACzEA,EAAQ,MAAM,GAAG,EAAE,QAASC,GAA2B,CACrDF,EAAQ,UAAU,IAAIH,EAAYK,EAAS,KAAM,CAAA,CAAC,CAAA,CACnD,CACH"}