{"version":3,"mappings":"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","names":["r","t","replaceBySpecifier","input","specifier","htmlTag","part","index","RuntimeCache","key","value","FetchService","endpoint","options","url","dataMapper","cacheOptions","cachedData","pipelinedRequest","request","response","responseData","data","decoratedUrl","FetchService$1","HeaderComponent","LitElement","_changedProperties","error","leftCol","rightCol","logoText","logoTextHTML","unsafeHTML","html","item","renderIcon","__decorateClass","state","customElement","ICONS_PATH","modules","DvaIcon","Component","LazyConnectService","newIconId","name","symbol","icon","LOADED_EVENT","svgTempBox","dvaEIconShadowScss","svgRoot","find","oldValue","newValue","toClassName","BlockService","block","config","row","cols","col","as","a","imgs","img","ps","p","main","shortBlockName","blockWrapper","section","toCamelCase","g","SectionService","blockService","container","sectionMeta","meta","style","wrappers","defaultContent","e","wrapper","parentElement","headerTemplate","renderLabel","args","dvaLinkTemplate","renderFooterAwardsTemplate","renderLazyImage","renderFooterSocialLinksTemplate","socialLink","renderFooterNavigationTemplate","renderFooter","borderTop","getMetadata","doc","attr","metaElement","renderBreadcrumpNavigationTemplate","nothing","isSidekickLibraryActive","addClasses","element","classes","cssClass","getLocation","_Status","Status","MainService","sectionService","lazyStylesScssPath","sidekickLibraryStylesScssPath","fontsScssPath","err","SectionsPromises","scriptEl","defaultContentWrappers","template","render","children","edsHeader","edsFooter","edsMain","body","theme","blockMap","blockModule","__vitePreload","href","insertBefore","resolve","reject","link","before","firstSection","blockPromises","lcpCandidate","sectionsBlocks","loadingPromises"],"sources":["../../node_modules/@lit/reactive-element/decorators/state.js","../../src/utils/replaceBySpecifier.ts","../../src/utils/RuntimeCache.ts","../../src/services/fetch.service.ts","../../src/components/header.ts","../../src/constants.ts","../../src/components/icon/dva-e-icon.ts","../../src/utils/toClassName.ts","../../src/services/block.service.ts","../../src/utils/toCamelCase.ts","../../src/services/section.service.ts","../../src/components/dvag-m-n01-header/dvag-m-n01-header.template.ts","../../src/components/dva-e-link/dva-e-link.template.ts","../../src/components/dvag-m-n02-footer/dvag-m-n02-footer__awards.template.ts","../../src/components/dvag-m-n02-footer/dvag-m-n02-footer__social-links.template.ts","../../src/components/dvag-m-n02-footer/dvag-m-n02-footer__navigation.template.ts","../../src/components/dvag-m-n02-footer/dvag-m-n02-footer.template.ts","../../src/utils/getMetadata.ts","../../src/components/dva-m-breadcrump-navigation/dva-m-breadcrump-navigation.template.ts","../../src/sidekickHelpers/isSidekickLibraryActive.ts","../../src/utils/addClasses.ts","../../config.ts","../../src/sidekickHelpers/getLocation.ts","../../src/services/main.service.ts","../../src/main.ts"],"sourcesContent":["import{property as t}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function r(r){return t({...r,state:!0,attribute:!1})}export{r as state};\n//# sourceMappingURL=state.js.map\n","/**\n * Represents the structure of an object used to specify replacements in a string.\n *\n * @interface ReplaceBySpecifier\n * @property {string} input - The input string where replacements will be made.\n * @property {string} specifier - The specifier string to search for in the input.\n * @property {string} htmlTag - The HTML tag to wrap around the parts matched by the specifier.\n */\ninterface ReplaceBySpecifier {\n  input: string;\n  specifier: string;\n  htmlTag: string;\n}\n\n/**\n * Replaces occurrences of a specified specifier in a string with an HTML tag.\n *\n * @param {ReplaceBySpecifier} param - An object containing input string, specifier, and HTML tag.\n * @param {string} param.input - The input string where replacements will be made.\n * @param {string} param.specifier - The specifier string to search for in the input.\n * @param {string} param.htmlTag - The HTML tag to wrap around the parts matched by the specifier.\n * @returns {string} - The modified string with replacements.\n *\n @example\n * // Example 1:\n  * const result1 = replaceBySpecifier({\n  *   input: 'This is a test string with some test keywords.',\n  *   specifier: 'test',\n  *   htmlTag: 'strong'\n  * });\n  * console.log(result1);\n  * // Output: 'This is a <strong> string with some </strong> keywords.'\n  *\n  * // Example 2:\n  * const result2 = replaceBySpecifier({\n  *   input: 'Hello, world!',\n  *   specifier: ',',\n  *   htmlTag: 'span'\n  * });\n  * console.log(result2);\n  * // Output: 'Hello<span> world!</span>'\n */\nexport function replaceBySpecifier({ input, specifier, htmlTag }: ReplaceBySpecifier): string {\n  return input\n    .split(specifier)\n    .map((part: string, index: number): string => (index % 2 === 1 ? `<${htmlTag}>${part}</${htmlTag}>` : part))\n    .join(\"\");\n}\n","export class RuntimeCache {\n  private runtimeCache: Map<string, any> = new Map();\n\n  public get<T>(key: string): T | undefined {\n    return this.runtimeCache.get(key);\n  }\n\n  public set<T>(key: string, value: T): void {\n    this.runtimeCache.set(key, value);\n  }\n\n  public has(key: string): boolean {\n    return this.runtimeCache.has(key);\n  }\n\n  public delete(key: string): void {\n    this.runtimeCache.delete(key);\n  }\n}\n","import { RuntimeCache } from \"../utils/RuntimeCache\";\n\nexport interface FetchServiceCacheOptions {\n  cacheType?: \"runtime\"; // 'local' | 'session' | \"request\" can be added later\n}\n\nexport interface FetchServiceOptions {\n  fetchOptions?: RequestInit;\n  cacheOptions?: FetchServiceCacheOptions;\n}\n\nclass FetchService {\n  private requestPipeline: Map<string, Promise<Response>> = new Map();\n\n  private runtimeCache = new RuntimeCache();\n\n  public fetchJson<T>(endpoint: string, options: FetchServiceOptions = {}): Promise<T> {\n    return this.fetchData(this.getCodeBasePath(endpoint), options, this.getResponseJSON<T>);\n  }\n\n  public fetchText(endpoint: string, options: FetchServiceOptions = {}): Promise<string> {\n    return this.fetchData(this.getCodeBasePath(endpoint), options, this.getResponseText);\n  }\n\n  private async fetchData<T>(\n    url: string,\n    options: FetchServiceOptions,\n    dataMapper: (Response) => Promise<T>,\n  ): Promise<T> {\n    const { cacheOptions } = options;\n    const cachedData = this.getCachedData<T>(url, cacheOptions);\n    if (cachedData !== null) return cachedData;\n\n    const pipelinedRequest = this.requestPipeline.get(url);\n    if (pipelinedRequest !== undefined) return dataMapper(await pipelinedRequest);\n\n    const request = fetch(url, options.fetchOptions);\n    this.requestPipeline.set(url, request);\n\n    const response = await request;\n    this.requestPipeline.delete(url);\n    const responseData = await dataMapper(response);\n\n    this.setCachedData(url, responseData, cacheOptions);\n    return responseData;\n  }\n\n  private async getResponseJSON<T>(response: Response): Promise<T> {\n    const responseClone = response.clone();\n    const responseJson = await responseClone.json();\n    return responseJson;\n  }\n\n  private async getResponseText(response: Response): Promise<string> {\n    const responseClone = response.clone();\n    const responseText = await responseClone.text();\n    return responseText;\n  }\n\n  private getCachedData<T>(url: string, cacheOptions?: FetchServiceCacheOptions): T | null {\n    if (cacheOptions?.cacheType === \"runtime\") {\n      return this.runtimeCache.get(url) ?? null;\n    }\n    return null;\n  }\n\n  private setCachedData<T>(url: string, data: T, cacheOptions?: FetchServiceCacheOptions): void {\n    if (cacheOptions?.cacheType === \"runtime\") {\n      this.runtimeCache.set(url, data);\n    }\n  }\n\n  private getCodeBasePath(endpoint: string): string {\n    const decoratedUrl = endpoint.startsWith(\"/\") ? endpoint : `/${endpoint}`;\n    return `${window.hlx.codeBasePath}${decoratedUrl}`;\n  }\n}\n\nexport default new FetchService();\n","import { html, LitElement, PropertyValueMap } from \"lit\";\nimport { customElement, state } from \"lit/decorators.js\";\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html.js\";\n\nimport { replaceBySpecifier } from \"../utils/replaceBySpecifier.ts\";\nimport FetchService from \"../services/fetch.service.ts\";\nimport { renderIcon } from \"./icon/dva-e-icon.template.ts\";\nimport { IconName } from \"../icons.types.ts\";\n\nexport interface HeaderResponseData {\n  leftCol: LeftCol;\n  rightCol: RightCol;\n}\n\nexport interface LeftCol {\n  data: LeftColData[];\n}\n\nexport interface LeftColData {\n  logoText: string;\n  logoLink: string;\n}\n\nexport interface RightCol {\n  data: RightColData[];\n}\n\nexport interface RightColData {\n  socialIcon: IconName;\n  socialLabel: string;\n  socialLink: string;\n}\n\ninterface HeaderTemplateData {\n  leftCol: LeftColData;\n  rightCol: RightColData[];\n}\n\n@customElement(\"header-component\")\nexport class HeaderComponent extends LitElement {\n  @state()\n  headerData: HeaderTemplateData;\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  protected async firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>) {\n    await this.fetchHeaderData();\n  }\n\n  async fetchHeaderData() {\n    try {\n      const response = await FetchService.fetchJson<HeaderResponseData>(\"header.json\", {\n        cacheOptions: { cacheType: \"runtime\" },\n      });\n      this.headerData = { leftCol: response.leftCol.data[0], rightCol: response.rightCol.data };\n    } catch (error) {\n      console.error(\"HeaderComponent: \", error);\n    }\n  }\n\n  render() {\n    if (!this.headerData) return;\n    const { leftCol, rightCol } = this.headerData;\n    const logoText = replaceBySpecifier({ input: leftCol.logoText, htmlTag: \"strong\", specifier: \":::\" });\n    const logoTextHTML = unsafeHTML(logoText);\n    return html`\n      <a href=\"${leftCol.logoLink}\" class=\"logo\">${logoTextHTML}</a>\n      <ul class=\"icons\">\n        ${rightCol.map(item => {\n          return html`\n            <li>\n              <a href=\"${item.socialLink}\" class=\"icon brands\" aria-label=\"${item.socialLabel}\">\n                ${renderIcon(item.socialIcon, \"header-icon\")}\n                <span class=\"label\">${item.socialLabel}</span>\n              </a>\n            </li>\n          `;\n        })}\n      </ul>\n    `;\n  }\n}\n","export const ICONS_PATH = \"/public/icons\";\n","import { Component } from \"@kluntje/core\";\nimport { find } from \"@kluntje/js-utils/lib/dom-helpers\";\n\nimport { ICONS_PATH } from \"../../constants.ts\";\nimport LazyConnectService from \"../../services/LazyConnectService.ts\";\nimport { LOADED_EVENT } from \"../../constants/eventTypes.ts\";\nimport dvaEIconShadowScss from \"./dva-e-icon.shadow.scss?inline\";\n\n// Vite runs on build time and finds all svg files in icons directory\n// Since import.meta.glob only accepts literals ICON_PATH cant be used\nconst modules = import.meta.glob(\"/public/icons/*.svg\", { as: \"raw\" });\n\nexport class DvaIcon extends Component {\n  constructor() {\n    super({\n      initialStates: {\n        loaded: false,\n      },\n      useShadowDOM: true,\n    });\n  }\n\n  connectedCallback() {\n    if (this.loadingAttr === \"eager\") {\n      super.connectedCallback();\n    } else {\n      LazyConnectService.subscribe(this, () => super.connectedCallback());\n    }\n  }\n\n  get loadingAttr(): string {\n    return this.getAttribute(\"loading\") || \"lazy\";\n  }\n\n  get iconId(): string {\n    return this.getAttribute(\"icon-id\") || \"\";\n  }\n\n  set iconId(newIconId: string) {\n    this.setAttribute(\"icon-id\", newIconId);\n  }\n\n  get halfFilled(): boolean {\n    return this.hasAttribute(\"half-filled\") && this.getAttribute(\"half-filled\") !== \"false\";\n  }\n\n  afterComponentRender(): void {\n    if (!this.state.loaded) {\n      this.loadIcon();\n    }\n  }\n\n  async getSvgString(name: string): Promise<string> {\n    const key = modules[`${ICONS_PATH}/${name}.svg`];\n    const iconMarkupFunc = key !== undefined ? key : modules[`${ICONS_PATH}/cross.svg`];\n    const iconMarkup = await iconMarkupFunc();\n    return iconMarkup;\n  }\n\n  async loadIcon() {\n    const symbol = await this.getSvgString(this.iconId)\n      .then(icon => {\n        return icon;\n      })\n      .catch(error => {\n        console.warn(`An error occurred while loading the component: ${error}`);\n        this.remove();\n      });\n\n    this.appendSymbol(symbol);\n    if (this.halfFilled) {\n      this.makeHalfFilled();\n    }\n    this.setState({ loaded: true });\n    this.dispatchEvent(new CustomEvent(LOADED_EVENT));\n  }\n\n  static get observedAttributes() {\n    return [\"half-filled\", \"icon-id\"];\n  }\n\n  appendSymbol(symbol: any) {\n    const svgTempBox = document.createElement(\"span\");\n    svgTempBox.innerHTML = `<style>${dvaEIconShadowScss}</style>${symbol}`;\n    const svgRoot = find(svgTempBox, \"svg\");\n    if (svgRoot !== null) {\n      svgRoot.setAttribute(\"class\", \"dva-e-icon__svg\");\n    }\n    this.getUiRoot().innerHTML = svgTempBox.innerHTML;\n  }\n\n  // @ts-ignore\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    if (oldValue === newValue) return;\n    if (this.state.loaded === true) this.loadIcon();\n  }\n\n  makeHalfFilled() {\n    const svgRoot = find(this, \"svg\");\n    if (svgRoot !== null) {\n      svgRoot.setAttribute(\"style\", \"fill: url(#half_filled)!important\");\n    }\n  }\n}\n\ncustomElements.define(\"dva-e-icon\", DvaIcon);\n","/**\n * Converts a string into a valid CSS class name.\n *\n * @param {string} name - The string to convert into a CSS class name.\n * @returns {string} The converted CSS class name.\n *\n * @example\n * // Example usage:\n * const inputString = 'Hello, World!';\n * const cssClassName = toClassName(inputString);\n * console.log(cssClassName); // Output: 'hello-world'\n */\nexport function toClassName(name: string): string {\n  return name\n    .toLowerCase()\n    .replace(/[^0-9a-z]/gi, \"-\")\n    .replace(/-+/g, \"-\")\n    .replace(/^-|-$/g, \"\");\n}\n","import { toClassName } from \"../utils/toClassName\";\n\nexport class BlockService {\n  /**\n   * Extracts the config from a block.\n   * @param {Element} block The block element\n   * @returns {object} The block config\n   */\n  readBlockConfig(block: Element): Record<string, any> {\n    const config: Record<any, any> = {};\n    block.querySelectorAll(\":scope > div\").forEach(row => {\n      if (row.children) {\n        const cols = [...row.children];\n        if (cols[1]) {\n          const col = cols[1];\n          const name = toClassName(cols[0].textContent ?? \"\");\n          let value: any = \"\";\n          if (col.querySelector(\"a\")) {\n            const as = [...col.querySelectorAll(\"a\")];\n            if (as.length === 1) {\n              value = as[0].href;\n            } else {\n              value = as.map(a => a.href);\n            }\n          } else if (col.querySelector(\"img\")) {\n            const imgs = [...col.querySelectorAll(\"img\")];\n            if (imgs.length === 1) {\n              value = imgs[0].src;\n            } else {\n              value = imgs.map(img => img.src);\n            }\n          } else if (col.querySelector(\"p\")) {\n            const ps = [...col.querySelectorAll(\"p\")];\n            if (ps.length === 1) {\n              value = ps[0].textContent;\n            } else {\n              value = ps.map(p => p.textContent);\n            }\n          } else value = row.children[1].textContent;\n          config[name] = value;\n        }\n      }\n    });\n    return config;\n  }\n\n  /**\n   * Decorates all blocks in a container element.\n   * @param {Element} main The container element\n   */\n  decorateBlocks(main: HTMLElement) {\n    main.querySelectorAll<HTMLDivElement>(\"div.section > div > div\").forEach(this.decorateBlock);\n  }\n\n  /**\n   * Decorates a block.\n   * @param {Element} block The block element\n   */\n  private decorateBlock(block: HTMLElement) {\n    const shortBlockName = block.classList[0];\n    if (shortBlockName) {\n      block.classList.add(\"block\");\n      block.dataset.blockName = shortBlockName;\n      const blockWrapper = block.parentElement;\n      blockWrapper?.classList.add(`${shortBlockName}-wrapper`);\n      const section = block.closest(\".section\");\n      if (section) section.classList.add(`${shortBlockName}-container`);\n    }\n  }\n}\n","import { toClassName } from \"./toClassName\";\n\n/**\n * Sanitizes a string for use as a JavaScript property name.\n *\n * @param {string} name - The unsanitized string.\n * @returns {string} - The camelCased name.\n *\n * @example\n * // Example usage:\n * const unsanitizedString = 'background-color';\n * const camelCasedName = toCamelCase(unsanitizedString);\n * console.log(camelCasedName); // Output: 'backgroundColor'\n */\nexport function toCamelCase(name: string): string {\n  return toClassName(name).replace(/-([a-z])/g, (g: string) => g[1].toUpperCase());\n}\n","import { toCamelCase } from '../utils/toCamelCase';\nimport { toClassName } from '../utils/toClassName';\nimport { BlockService } from './block.service';\n\nexport class SectionService {\n  constructor(private blockService: BlockService) {}\n\n  init(container: HTMLElement) {\n    this.transformSection(container);\n  }\n\n  /**\n   * Decorates all sections in a container element.\n   * @param {Element} main The container element\n   */\n  private transformSection(main: HTMLElement) {\n    main.querySelectorAll<HTMLDivElement>(':scope > div').forEach((section) => {\n      this.adjustMarkup(section);\n      this.processSectionMetaData(section);\n    });\n  }\n\n  private processSectionMetaData(section: HTMLElement) {\n    // Process section metadata\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = this.blockService.readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style\n            .split(',')\n            .filter((style: string) => style)\n            .map((style: string) => toClassName(style.trim()));\n          styles.forEach((style: string) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      if (sectionMeta.parentElement) sectionMeta.parentElement.remove();\n    }\n  }\n\n  private adjustMarkup(section: HTMLDivElement) {\n    const wrappers: HTMLDivElement[] = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n\n        if (defaultContent) {\n          wrapper.classList.add('default-content-wrapper');\n        }\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    this.decorateImages();\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n  }\n  decorateImages() {\n    const picture = document.querySelectorAll('.default-content-wrapper picture');\n    picture.forEach((item) => {\n      const parentElement = item.parentElement;\n      if (parentElement) {\n        parentElement.classList.add('image', 'main');\n      }\n    });\n  }\n}\n","import { renderIcon } from \"Components/icon/dva-e-icon.template\";\nimport { html } from \"lit-html\";\n\nexport const headerTemplate = () => {\n  return html`\n    <dvag-m-n01-header class=\"dvag-m-n01-header\" vb-file-url=\"/async-includes/subbar.html\">\n      <div class=\"dvag-m-n01-header__logo-wrapper\">\n        <div class=\"dvag-m-n01-header__logo-mobile\">\n          <a href=\"#\" title=\"Deutsche Vermögensberatung\" aria-label=\"home\"> ${renderIcon(\"dva-icon-header-logo-s\")} </a>\n        </div>\n        <div class=\"dvag-m-n01-header__logo-desktop\">\n          <!-- @BE: iconId for allfinanz: \"dva-icon-header-logo-allfinanz-xl\" -->\n          <a href=\"#\" title=\"Deutsche Vermögensberatung\" aria-label=\"home\">\n            ${renderIcon(\"dva-icon-header-logo-dvag-xl\")}\n          </a>\n        </div>\n        <!-- if VB-page or US-page with VBPathCookie is set, content of data-vb-file will be rendered here and will be shown on scroll -->\n      </div>\n      <div class=\"dvag-m-n01-header__menu-wrapper\">\n        <div class=\"dvag-m-n01-header__header-navigation-wrapper\">\n          <ul class=\"dvag-m-n01-header__header-navigation-list\">\n            <li class=\"dvag-m-n01-header__header-navigation-item\">\n              <a class=\"dvag-m-n01-header__header-navigation-link\" href=\"#\" title=\"Lorem\">Lorem</a>\n            </li>\n            <li class=\"dvag-m-n01-header__header-navigation-item\">\n              <a class=\"dvag-m-n01-header__header-navigation-link\" href=\"#\" title=\"Ipsum\">Ipsum</a>\n            </li>\n          </ul>\n        </div>\n        <!-- toggle-buttons to open overlay for vb-finder (dvag.de) or contact-overlay (VB-pages) -->\n        <!-- {{> dvag-e-n06-vb-finder-overlay-toggle \n          cssClasses=\"dvag-m-n01-header__cta\"\n          iconID=\"dva-icon-speechbubble-24px\"\n          label=\"Jetzt beraten lassen\"\n        }}\n        {{> dvag-e-c26-vb-contact-overlay-toggle \n          cssClasses=\"dvag-m-n01-header__cta\"\n          noCookieHide=true\n          iconID=\"dva-icon-speechbubble-24px\"\n          label=\"Kontakt\" \n        }} -->\n        <a class=\"dvag-m-n01-header__burger-menu\" href=\"#\">\n          ${renderIcon(\"dva-icon-burger-24px\")}\n          <span class=\"dvag-m-n01-header__burger-label\">Menü</span>\n        </a>\n      </div>\n\n      <!-- navigation -->\n      <div class=\"dvag-m-n01-header__navigation-wrapper\">\n        <!-- {{> dvag-m-n01-navigation}} -->\n      </div>\n    </dvag-m-n01-header>\n  `;\n};\n","import { html } from \"lit-html\";\n\nexport type DvaLinkTemplateArgs = {\n  target: string;\n  cssClasses?: string;\n  newWindow?: boolean;\n  label?: string;\n  iconID?: string;\n  shouldRender?: boolean;\n};\n\nconst renderLabel = (args: DvaLinkTemplateArgs) => {\n  if (args.label === undefined) return \"\";\n\n  return html` <span class=\"dva-e-link__label\">${args.label}</span> `;\n};\n\nconst renderIcon = (args: DvaLinkTemplateArgs) => {\n  if (args.iconID === undefined) return \"\";\n\n  return html` <dva-e-icon class=\"dva-e-icon\" icon-id=\"${args.iconID}\"></dva-e-icon> `;\n};\n\nexport const dvaLinkTemplate = (args: DvaLinkTemplateArgs) => {\n  if (args.shouldRender === false) return \"\";\n  return html`\n    <a\n      class=\"dva-e-link${args.cssClasses ? ` ${args.cssClasses}` : \"\"}\"\n      href=\"${args.target}\"\n      target=\"${args.newWindow !== true ? \"_self\" : \"_blank\"}\"\n    >\n      ${renderLabel(args)} ${renderIcon(args)}\n    </a>\n  `;\n};\n","import { renderLazyImage } from \"Components/dva-e-lazy-image/dva-e-lazy-image.template\";\nimport { html } from \"lit-html\";\n\nexport const renderFooterAwardsTemplate = () => {\n  return html`\n    <h5 class=\"dvag-m-n02-footer__headline\">Bestnoten in Beratung, Service und Karriere</h5>\n    <div class=\"dvag-m-n02-footer__awards\">\n      <a href=\"#\">\n        ${renderLazyImage({\n          src: \"https://main--dva-showcase--ifahrentholz.hlx.page/assets/service-rating-footer.svg\",\n          cssClasses: \"dvag-m-n02-footer__award-image\",\n        })}\n      </a>\n      <a href=\"#\">\n        ${renderLazyImage({\n          src: \"https://main--dva-showcase--ifahrentholz.hlx.page/assets/kundenchampions-footer.svg\",\n          cssClasses: \"dvag-m-n02-footer__award-image\",\n        })}\n      </a>\n    </div>\n  `;\n};\n","import { html } from \"lit-html\";\nimport { renderIcon } from \"Components/icon/dva-e-icon.template\";\n\nimport data from \"./dvag-m-n02-footer__data.json\";\nimport { IconName } from \"../../icons.types\";\n\nexport const renderFooterSocialLinksTemplate = () => {\n  return html`\n    <h5 class=\"dvag-m-n02-footer__headline\">Finden Sie uns in den sozialen Netzwerken</h5>\n\n    <div class=\"dvag-m-n02-footer__social-links\">\n      ${data.socialLinks.map(socialLink => {\n        return html`\n          <a\n            href=\"#\"\n            class=\"dva-e-button dva-e-button--secondary dva-e-button--icon-only dva-e-button--rebrush dvag-m-n02-footer__social-link\"\n          >\n            <div class=\"dva-e-button__background\"></div>\n            ${renderIcon(socialLink.icon as IconName, \"dva-e-button__icon\")}\n          </a>\n        `;\n      })}\n    </div>\n  `;\n};\n","import { renderIcon } from \"Components/icon/dva-e-icon.template\";\nimport { html } from \"lit-html\";\nimport { dvaLinkTemplate } from \"Components/dva-e-link/dva-e-link.template\";\n\nimport data from \"./dvag-m-n02-footer__data.json\";\n\nexport const renderFooterNavigationTemplate = () => {\n  return html` <dvag-m-c11-accordion class=\"dvag-m-c11-accordion dvag-m-n02-footer__navigation\" active-on-mq=\"1-3\">\n    ${data.navigationSections.map(section => {\n      return html` <div class=\"dvag-m-c11-accordion__block\">\n        <button class=\"dvag-m-c11-accordion__toggle\" tabindex=\"-1\">\n          ${renderIcon(\"dva-icon-chevron-down-16px\", \"dvag-m-c11-accordion__toggle-icon\")}\n          <span class=\"dvag-m-c11-accordion__toggle-label\"> ${section.headline.label} </span>\n        </button>\n        <div class=\"dvag-m-c11-accordion__content\">\n          <div class=\"dvag-m-c11-accordion__content-wrapper\">\n            <ul class=\"dvag-m-n02-footer__list\">\n              ${section.items.map(item => {\n                return html` <li class=\"dvag-m-n02-footer__list-item\">\n                  ${dvaLinkTemplate({ target: item.link, label: item.label })}\n                </li>`;\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>`;\n    })}\n  </dvag-m-c11-accordion>`;\n};\n","import { html } from \"lit-html\";\nimport { dvaLinkTemplate } from \"Components/dva-e-link/dva-e-link.template\";\n\nimport { renderFooterAwardsTemplate } from \"./dvag-m-n02-footer__awards.template\";\nimport { renderFooterSocialLinksTemplate } from \"./dvag-m-n02-footer__social-links.template\";\nimport { renderFooterNavigationTemplate } from \"./dvag-m-n02-footer__navigation.template\";\n\nexport const renderFooter = (borderTop = false) => {\n  return html`\n    <!-- @TODO BE - add css-class \"dvag-m-n02-footer--border-top\" to footer in case there is no dvag-m-recommendation-bar on top -->\n    <footer class=\"dvag-m-n02-footer${borderTop ? \" dvag-m-n02-footer--border-top\" : \"\"}\">\n      <div class=\"dva-grid\">\n        <div class=\"dva-grid-row\">\n          <div class=\"dva-grid-col-1-12\">${renderFooterNavigationTemplate()}</div>\n        </div>\n        <div class=\"dva-grid-row\">\n          <!-- @TODO BE - social links are only visible on non-vb-pages -->\n          <div class=\"dva-grid-col-1-12 dva-grid-col-4-6\">${renderFooterAwardsTemplate()}</div>\n          <div class=\"dva-grid-col-1-12 dva-grid-col-4-6\">${renderFooterSocialLinksTemplate()}</div>\n        </div>\n      </div>\n      <div class=\"dvag-m-n02-footer__skew-area\">\n        <div class=\"dvag-h-skew--in\"></div>\n        <div class=\"dvag-m-skewed-box__content\">\n          <div class=\"dva-grid\">\n            <div class=\"dva-grid-row\">\n              <div class=\"dva-grid-col-1-12\">\n                <div class=\"dvag-m-n02-footer__legal-links\">\n                  ${dvaLinkTemplate({ target: \"#\", label: \"Datenschutz\", cssClasses: \"dvag-m-n02-footer__legal-link\" })}\n                  ${dvaLinkTemplate({ target: \"#\", label: \"Impressum\", cssClasses: \"dvag-m-n02-footer__legal-link\" })}\n                  ${dvaLinkTemplate({\n                    target: \"#\",\n                    label: \"Cookies bearbeiten\",\n                    cssClasses: \"dvag-m-n02-footer__legal-link\",\n                  })}\n                  <!-- <dvag-e-overlay-toggle class=\"dvag-e-overlay-toggle dva-e-link dvag-m-n02-footer__legal-link\" target=\"#cookie-settings-overlay\" tabindex=\"0\">Cookies bearbeiten</dvag-e-overlay-toggle> -->\n                </div>\n                <p class=\"dvag-m-n02-footer__copyright\">&copy; 2023 Deutsche Vermögensberatung AG (DVAG)</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  `;\n};\n","/**\n * Retrieves the content of a specified metadata tag from the document head.\n *\n * @param {string} value - The name or property attribute value of the metadata tag.\n * @param {Document} [doc=document] - The document to search for the metadata tag (default is the current document).\n * @returns {string} - The content of the metadata tag, if found; otherwise, an empty string.\n *\n * @example\n * // Example 1:\n * // Assuming <meta name=\"description\" content=\"This is a sample description.\"> exists in the document head.\n * const metaContent = getMetadata('description');\n * console.log(metaContent);\n * // Output: 'This is a sample description.'\n *\n * @example\n * // Example 2:\n * // Assuming <meta property=\"og:title\" content=\"Open Graph Title\"> exists in the document head.\n * const metaContent = getMetadata('og:title', document);\n * console.log(metaContent);\n * // Output: 'Open Graph Title'\n */\nexport function getMetadata(value: string, doc: Document = document): string {\n  const attr: \"property\" | \"name\" = value && value.includes(\":\") ? \"property\" : \"name\";\n  const metaTags: HTMLMetaElement[] =\n    ([...doc.head.querySelectorAll(`meta[${attr}=\"${value}\"]`)] as HTMLMetaElement[]) || [];\n  const meta: string = metaTags.map((metaElement: HTMLMetaElement) => metaElement.content).join(\", \");\n  return meta.length ? meta : \"\";\n}\n","import { renderIcon } from \"Components/icon/dva-e-icon.template\";\nimport { getMetadata } from \"Utils/getMetadata\";\nimport { nothing } from \"lit\";\nimport { html } from \"lit-html\";\n\nexport const renderBreadcrumpNavigationTemplate = () => {\n  if (getMetadata(\"breadcrumb\") !== \"true\") return nothing;\n  return html`\n    <div class=\"dva-grid\">\n      <div class=\"dva-grid-row\">\n        <div class=\"dva-grid-col-1-12\">\n          <nav class=\"dva-m-breadcrump-navigation\">\n            <ul class=\"dva-m-breadcrump-navigation__list\">\n              <li class=\"dva-m-breadcrump-navigation__item\">\n                <a href=\"#\" class=\"dva-m-breadcrump-navigation__link\">\n                  <span class=\"dva-m-breadcrump-navigation__label\">Startseite</span>\n                </a>\n                ${renderIcon(\"dva-icon-chevron-right\")}\n              </li>\n              <li class=\"dva-m-breadcrump-navigation__item\">\n                <a href=\"#\" class=\"dva-m-breadcrump-navigation__link\">\n                  <span class=\"dva-m-breadcrump-navigation__label\">Allfinanzberatung</span>\n                </a>\n                ${renderIcon(\"dva-icon-chevron-right\")}\n              </li>\n              <li class=\"dva-m-breadcrump-navigation__item\">\n                <a href=\"#\" class=\"dva-m-breadcrump-navigation__link\">\n                  <span class=\"dva-m-breadcrump-navigation__label\">Firmenkunden</span>\n                </a>\n                ${renderIcon(\"dva-icon-chevron-right\")}\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  `;\n};\n","/**\n * Verifies if the Sidekick Library Plugin is in use by checking if the page is running in an iframe with srcdoc\n * and if the main element has the sidekick-library class.\n * @returns {boolean} Wether the Sidekick Library Plugin is in use.\n */\nexport const isSidekickLibraryActive = (): boolean => {\n  const main = document.querySelector(\"#main\");\n  if (!main) return false;\n  return window.location.href === \"about:srcdoc\" && main.classList.contains(\"sidekick-library\");\n};\n","import { toClassName } from \"./toClassName\";\n\n/**\n * Adds CSS classes to an HTML element.\n *\n * @param {HTMLElement} element - The HTML element to which classes will be added.\n * @param {string} classes - A string containing CSS classes separated by commas.\n *\n * @example\n * const element = document.getElementById('myElement');\n * const classesToAdd = 'class1, class2, class3';\n * addClasses(element, classesToAdd);\n */\nexport const addClasses = (element: HTMLElement, classes: string): void => {\n  classes.split(\",\").forEach((cssClass: string): void => {\n    element.classList.add(toClassName(cssClass.trim()));\n  });\n};\n","export interface Config {\n  mainTsPath: string;\n  mainScssPath: string;\n  iconsDirPath: string;\n  iconsTypesPath: string;\n  fontsScssPath?: string;\n  lazyStylesScssPath?: string;\n  sidekickLibraryStylesScssPath?: string;\n}\n\nexport const config: Config = {\n  mainTsPath: 'src/main.ts',\n  mainScssPath: 'src/styles/index.scss',\n  iconsDirPath: './public/icons',\n  iconsTypesPath: './src/icons.types.ts',\n  fontsScssPath: 'src/styles/fonts.scss',\n  lazyStylesScssPath: 'src/styles/lazy-styles.scss',\n  sidekickLibraryStylesScssPath: 'src/styles/sidekick-library-styles.scss',\n};\n","import { isSidekickLibraryActive } from \"./isSidekickLibraryActive\";\n\n/**\n * Returns the true origin of the current page in the browser.\n * If the page is running in an iframe with srcdoc, the query param is returned.\n * @returns {String} The query param of the current page or the query param of the block running in the library\n *\n * @example\n * const searchParams = new URLSearchParams(getLocation().search);\n *\n * @remarks\n * Needs to be used when the Sidekick Library Plugin is in use.\n */\nexport function getLocation(): Location {\n  return isSidekickLibraryActive() ? window.parent.location : window.location;\n}\n","import { html, render } from 'lit-html';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport { headerTemplate } from 'Components/dvag-m-n01-header/dvag-m-n01-header.template.ts';\nimport { renderFooter } from 'Components/dvag-m-n02-footer/dvag-m-n02-footer.template.ts';\nimport { renderBreadcrumpNavigationTemplate } from 'Components/dva-m-breadcrump-navigation/dva-m-breadcrump-navigation.template.ts';\n\nimport { isSidekickLibraryActive } from '../sidekickHelpers/isSidekickLibraryActive';\nimport { addClasses } from '../utils/addClasses';\nimport { getMetadata } from '../utils/getMetadata';\nimport { BlockService } from './block.service';\nimport { SectionService } from './section.service';\nimport { config } from '../../config.ts';\nimport { getLocation } from '../sidekickHelpers/getLocation.ts';\n\ntype BlockMapping = {\n  name: string;\n  element: HTMLDivElement;\n};\n\ninterface LcpCandidate extends HTMLElement {\n  complete: boolean;\n}\n\nclass Status {\n  static unloaded = 'unloaded';\n  static loading = 'loading';\n  static loaded = 'loaded';\n  static error = 'error';\n}\n\nexport class MainService {\n  private lcpBlocks = ['article-stage', 'article-header', 'article-overview'];\n\n  constructor(\n    private sectionService: SectionService,\n    private blockService: BlockService\n  ) {}\n\n  init = async () => {\n    this.setup();\n    await this.loadEager();\n    await this.loadLazy();\n  };\n\n  /**\n   * Setup block utils.\n   */\n  private setup() {\n    window.hlx = window.hlx || {};\n    window.hlx.RUM_MASK_URL = 'full';\n    window.hlx.codeBasePath = '';\n    window.hlx.lighthouse = new URLSearchParams(getLocation().search).get('lighthouse') === 'on';\n\n    const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]') as HTMLScriptElement;\n    if (scriptEl) {\n      try {\n        [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      }\n    }\n  }\n\n  decorateDefaultContent(main: HTMLElement) {\n    const defaultContentWrappers = main.querySelectorAll('.default-content-wrapper');\n    if (!defaultContentWrappers) return;\n    defaultContentWrappers.forEach((wrapper: HTMLElement) => {\n      const template = html`\n        <div class=\"article-container\">\n          <div class=\"container text\">\n            <div class=\"bleed-m bleed-l\">\n              <div class=\"col-s-12 col-m-10 col-m-1-offset col-l-8 col-l-2-offset\">\n                ${unsafeHTML(wrapper.innerHTML)}\n              </div>\n            </div>\n          </div>\n        </div>\n      `;\n      wrapper.innerHTML = '';\n      render(template, wrapper);\n    });\n  }\n\n  private loadEager = async () => {\n    document.documentElement.lang = 'en';\n    this.decorateTemplateAndTheme();\n    const main = document.querySelector('main');\n    if (main) {\n      this.sectionService.init(main);\n\n      this.blockService.decorateBlocks(main);\n      this.decorateDefaultContent(main);\n      this.renderLayout(main);\n\n      setTimeout(() => {\n        document.body.classList.add('show');\n      }, 100);\n\n      await this.waitForLCP();\n\n      try {\n        /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n        if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n          await this.loadFonts();\n        }\n      } catch (e) {\n        // do nothing\n      }\n    }\n  };\n\n  private bodyTemplate(children: string) {\n    return html` <div class=\"page container dva-page\">\n      ${headerTemplate()} ${renderBreadcrumpNavigationTemplate()} ${unsafeHTML(children)} ${renderFooter()}\n    </div>`;\n  }\n\n  private renderLayout(main: HTMLElement) {\n    const children = main.innerHTML;\n    const edsHeader = document.querySelector('header');\n    const edsFooter = document.querySelector('footer');\n    const edsMain = main;\n    const body = document.querySelector('body');\n    if (body) {\n      render(this.bodyTemplate(children), body);\n      edsFooter?.remove();\n      edsHeader?.remove();\n      edsMain.remove();\n    }\n  }\n\n  private loadLazy = async () => {\n    const { lazyStylesScssPath, sidekickLibraryStylesScssPath, fontsScssPath } = config;\n    try {\n      if (lazyStylesScssPath) await this.loadCSS(`${window.hlx.codeBasePath}/dist/lazyStyles/lazyStyles.css`);\n      if (sidekickLibraryStylesScssPath && isSidekickLibraryActive()) {\n        await this.loadCSS(`${window.hlx.codeBasePath}/dist/sidekickLibraryStyles/sidekickLibraryStyles.css`);\n      }\n      if (fontsScssPath) await this.loadFonts();\n      await this.loadCSS(\n        `${window.hlx.codeBasePath}/dist/legacyStyles/legacyStyles.css`,\n        `${window.hlx.codeBasePath}/dist/styles/styles.css`\n      );\n      await this.loadBlocks();\n    } catch (error) {\n      console.error('Load lazy error: ', error);\n      try {\n        await this.loadBlocks();\n      } catch (err) {\n        console.error('Load blocks error: ', err);\n      }\n    }\n  };\n\n  private decorateTemplateAndTheme() {\n    const template = getMetadata('template');\n    if (template) addClasses(document.body, template);\n    const theme = getMetadata('theme');\n    if (theme) addClasses(document.body, theme);\n  }\n\n  /**\n   * Loads Blocks\n   * by getting all sections and load every block in every section\n   * and shows every section that is finished loading.\n   */\n  private loadBlocks = async () => {\n    const sections = [...document.querySelectorAll<HTMLElement>('.section')];\n    const SectionsPromises = sections.map((section) => this.loadBlock(section));\n\n    await Promise.all(SectionsPromises);\n  };\n\n  private collectBlocks(section: HTMLElement): BlockMapping[] {\n    const blockMap: BlockMapping[] = [];\n    const blocksElements = section.querySelectorAll<HTMLDivElement>('[data-block-name]');\n\n    blocksElements.forEach((block: HTMLDivElement) => {\n      blockMap.push({\n        name: block.dataset['blockName'] as string,\n        element: block,\n      });\n    });\n\n    return blockMap;\n  }\n\n  private async loadBlockModules(block: BlockMapping) {\n    const status = block.element.dataset.blockStatus ?? Status.unloaded;\n\n    if (status === Status.unloaded) {\n      block.element.dataset.blockStatus = Status.loading;\n\n      try {\n        const blockModule = await import(`${window.hlx.codeBasePath}/dist/${block.name}/${block.name}.js`);\n\n        if (blockModule.default) {\n          await blockModule.default(block.element);\n        }\n\n        block.element.dataset.blockStatus = Status.loaded;\n      } catch (error) {\n        block.element.dataset.blockStatus = Status.error;\n        console.error('An error occurred during module import:', error);\n      }\n    }\n  }\n\n  async loadBlockStyles(block: BlockMapping) {\n    try {\n      await this.loadCSS(`${window.hlx.codeBasePath}/dist/${block.name}/${block.name}.css`);\n    } catch (error) {\n      console.error(`problem with block '${block.name}' loading styles`);\n    }\n  }\n\n  private showSection(section: HTMLElement) {\n    section.style.removeProperty('display');\n  }\n\n  private async loadFonts() {\n    await this.loadCSS(`${window.hlx.codeBasePath}/dist/fonts/fonts.css`);\n    try {\n      if (!getLocation().hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  private async loadCSS(href: string, insertBefore?: string) {\n    return new Promise((resolve, reject) => {\n      if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = href;\n        link.onload = resolve;\n        link.onerror = reject;\n        if (insertBefore !== undefined) {\n          const before = document.querySelector(`head > link[href=\"${insertBefore}\"]`);\n          if (before) before.before(link);\n        } else {\n          document.head.append(link);\n        }\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private async waitForLCP() {\n    /* Js Chunks should be loaded\n    Old logic only looks after the first block\n    New logic looks in the first section after lcp candidates,\n    since we show ech section depending on if its blocks and modules are loaded */\n    const firstSection: HTMLElement | null = document.querySelector('.section');\n\n    if (firstSection) {\n      const blocks = this.collectBlocks(firstSection);\n      const blockPromises = blocks.map(async (block) => {\n        const hasLCPBlock = this.lcpBlocks.includes(block.name);\n        if (hasLCPBlock) await Promise.all([this.loadBlockModules(block), this.loadBlockStyles(block)]);\n      });\n\n      await Promise.all(blockPromises);\n      this.showSection(firstSection);\n    }\n\n    // @ts-ignore\n    document.body.style.display = null;\n    const lcpCandidate = document.querySelector<LcpCandidate>('main img');\n\n    await new Promise<void>((resolve) => {\n      if (lcpCandidate && !lcpCandidate.complete) {\n        lcpCandidate.setAttribute('loading', 'eager');\n        lcpCandidate.setAttribute('fetchpriority', 'high');\n        lcpCandidate.addEventListener('load', () => resolve());\n        lcpCandidate.addEventListener('error', () => resolve());\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  private async loadBlock(section: HTMLElement) {\n    const sectionsBlocks: BlockMapping[] = this.collectBlocks(section);\n\n    if (!sectionsBlocks.length) {\n      this.showSection(section);\n      return;\n    }\n\n    const loadingPromises: Promise<void>[] = [];\n\n    for (const block of sectionsBlocks) {\n      loadingPromises.push(this.loadBlockModules(block), this.loadBlockStyles(block));\n    }\n\n    await Promise.all(loadingPromises);\n    this.showSection(section);\n  }\n}\n","import \"Components/header.ts\";\nimport \"Components/icon/dva-e-icon.ts\";\nimport \"Components/dva-e-lazy-image/dva-e-lazy-image.ts\";\nimport \"Services/fetch.service.ts\";\nimport \"Components/dvag-m-c11-accordion/dvag-m-c11-accordion.ts\";\nimport { ConsentManagementService } from \"Services/ConsentManagementService.ts\";\n\nimport { BlockService } from \"./services/block.service.ts\";\nimport { SectionService } from \"./services/section.service.ts\";\nimport { MainService } from \"./services/main.service.ts\";\n\n(async function () {\n  // preloadLcpImageCandidate();\n  const blockService = new BlockService();\n  const sectionService = new SectionService(blockService);\n  const main = new MainService(sectionService, blockService);\n  await main.init();\n})();\n\ndeclare global {\n  interface Window {\n    hlx: {\n      RUM_MASK_URL: string;\n      codeBasePath: string;\n      lighthouse: boolean;\n    };\n    Granite: any;\n    _dvaConsentManagementService: ConsentManagementService;\n  }\n}\n"],"file":"main/main.js"}