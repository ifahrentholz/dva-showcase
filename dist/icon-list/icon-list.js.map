{"version":3,"file":"icon-list.js","sources":["../../src/blocks/icon-list/icon-list.ts"],"sourcesContent":["import { html, render } from \"lit\";\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html.js\";\nimport \"./icon-list.scss\";\nimport { cleanUpBlock } from \"Utils/cleanUpBlock\";\n\ntype variantName = \"squared\" | \"round\" | \"question\" | \"exclamation\" | \"checkmark\" | \"cross\" | \"star\";\n\ninterface IconListTemplateArgs {\n  headline: string;\n  listItems: HTMLLIElement[];\n  variant: variantName;\n}\n\nconst iconListTemplate = (args: IconListTemplateArgs) => {\n  return html` <div class=\"article-text text parbase\">\n    <div class=\"dva-e-list--${args.variant || \"star\"}\">\n      <h2>${args.headline}</h2>\n      <ul>\n        ${args.listItems.map(item => html`<li>${unsafeHTML(item.innerHTML)}</li>`)}\n      </ul>\n    </div>\n  </div>`;\n};\n\nexport default function (block: HTMLElement) {\n  const headline = block.children[0].querySelector(\"p\")?.textContent || \"\";\n  const listItems = [...block.children[0].querySelectorAll(\"li\")];\n  const variant = [...block.classList].filter(\n    classValue => classValue !== \"block\" && classValue !== \"icon-list\",\n  )[0] as IconListTemplateArgs[\"variant\"];\n  cleanUpBlock(block);\n  render(iconListTemplate({ headline, listItems, variant }), block);\n}\n"],"names":["iconListTemplate","args","html","item","unsafeHTML","iconList","block","headline","_a","listItems","variant","classValue","cleanUpBlock","render"],"mappings":"iLAaA,MAAMA,EAAoBC,GACjBC,mEACqBD,EAAK,SAAW,MAAM,SACxCA,EAAK,QAAQ,YAEfA,EAAK,UAAU,IAAYE,GAAAD,QAAWE,EAAWD,EAAK,SAAS,CAAC,OAAO,CAAC,oBAMlF,SAAAE,EAAyBC,EAAoB,OACrC,MAAAC,IAAWC,EAAAF,EAAM,SAAS,CAAC,EAAE,cAAc,GAAG,IAAnC,YAAAE,EAAsC,cAAe,GAChEC,EAAY,CAAC,GAAGH,EAAM,SAAS,CAAC,EAAE,iBAAiB,IAAI,CAAC,EACxDI,EAAU,CAAC,GAAGJ,EAAM,SAAS,EAAE,OACnCK,GAAcA,IAAe,SAAWA,IAAe,aACvD,CAAC,EACHC,EAAaN,CAAK,EAClBO,EAAOb,EAAiB,CAAE,SAAAO,EAAU,UAAAE,EAAW,QAAAC,CAAS,CAAA,EAAGJ,CAAK,CAClE"}