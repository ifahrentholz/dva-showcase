/**
 * Mixin to keep aspect ratio placeholder for preloader
 *
 * @mixin
 * @section Image-Handling
 * @example
 *  @include aspect-ratio($width, $height);
 */
@mixin aspect-ratio($width, $height) {
  position: relative;

  &:before {
    content: "";
    display: block;
    width: 100%;
    padding-top: calc(($height / $width) * 100%);
    pointer-events: none;
  }

  > .dva-e-lazy-image__img {
    position: absolute;
    top: 0;
    left: 0;
  }
}

// animation mixin needed in spinner-animation
@mixin animation($animation) {
  -webkit-animation: $animation;
  -o-animation: $animation;
  animation: $animation;
}

// keyframe mixin needed in spinner-animation
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }

  @-moz-keyframes #{$animationName} {
    @content;
  }

  @-o-keyframes #{$animationName} {
    @content;
  }

  @keyframes #{$animationName} {
    @content;
  }
}

/**
 * Crossbrowser transition
 *
 * @mixin
 * @section Crossbrowser Mixins
 * @example
 *  @include transition($transition...);
 */
@mixin transition($transition...) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  transition: $transition;
}

/**
 * Crossbrowser transition
 *
 * @mixin
 * @section Crossbrowser Mixins
 * @example
 *  @include transform($transform);
 */
@mixin transform($transform...) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}

/**
 * Wrapper for hover styles with CSS hover feature detection
 */
@mixin hover($applyPseudo: true, $hover: "hover", $pointer: "fine") {
  @media (hover: $hover) and (pointer: $pointer) {
    @if $applyPseudo {
      &:hover {
        @content;
      }
    } @else {
      @content;
    }
  }
}
